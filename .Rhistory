install.packages("caret")
library(caret)
data(oil)
createDataPartition(oilType, 2)
x <- rgamma(50, 3, .5)
inA <- createDataPartition(x, list = FALSE)
require(knitr)
# include this code chunk as-is to set options
opts_chunk$set(comment = NA, prompt = TRUE, tidy = FALSE, fig.width = 7, fig.height = 7,echo = TRUE, message = FALSE, warning = FALSE, cache=FALSE)
Sys.setlocale("LC_TIME", "C")
if(!(require(faraway))) install.packages("faraway", dep=TRUE)
if(!(require(faraway))) install.packages("faraway", dep=TRUE)
if(!(require(ggplot2))) install.packages("ggplot2", dep=TRUE)
if(!(require(printr))) {
install.packages(
'printr',
type = 'source',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
}
source("http://bioconductor.org/biocLite.R")
biocLite()
knitr::opts_chunk$set(echo = TRUE)
y<-c(3,2,4,9,6,7,2,6,5,8)
x1<-c(1,1,3,7,8,7,4,6,6,9)
x2<-c(3,4,7,9,7,6,5,8,5,7)
exp<-cbind(x1,x2)
lenguaje.datos<-data.frame(y,exp)
par(pty="s")
pairs(lenguaje.datos)
regrem<-lm(y~x1+x2)
summary(regrem)
names(summary(regrem))
names(regrem)
names(regrem)
names(summary(regrem))
names(regrem)
regrem
model.matrix(regrem)
X<-model.matrix(regrem)
XtX<-t(X)%*%X
XtX
XtX.inv<-solve(XtX)
XtX.inv
XtX.inv%*%t(cbind(1,exp))%*%y
summary(regrem)$coefficients
XtX.inv%*%t(cbind(1,exp))%*%y
summary(regrem)$coefficients[,1]
t(summary(regrem)$coefficients[,1])
summary(regrem)$cov.unscaled
regrem.ls<-lsfit(exp,y)
regrem.diag<-ls.diag(regre.ls)
regrem.diag<-ls.diag(regrem.ls)
regrem.diag$cov.unscaled
summary(regrem)$sigma^22*summary(regrem)$cov.unscaled
regrem.diag$std.dev^2*regrem.diag$cov.unscaled
names(summary(regrem))
Si queremos repetir los cálculos "a mano" necesitamos la matriz de diseño
summary(regrem)$cov.unscaled
t(cbind(1,exp))
X <- cbind(1,exp)
X
X<-model.matrix(regrem)
X
setwd("C:/Users/asanc/Dropbox (VHIR)/SotaCV/StatisticalAnalysisOfMicroarrayData")
